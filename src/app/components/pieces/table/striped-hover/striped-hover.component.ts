import {
  ChangeDetectionStrategy,
  Component,
  inject,
  type OnInit,
} from '@angular/core';
import { ThemeService } from '../../../../services/theme.service';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ComponentPreviewComponent } from '../../../component-preview/component-preview.component';
import { CodeSnippetPreviewComponent } from '../../../code-snippet-preview/code-snippet-preview.component';
import { TableRow } from '../table.component';

@Component({
  selector: 'app-striped-hover',
  imports: [
    CommonModule,
    FormsModule,
    ComponentPreviewComponent,
    CodeSnippetPreviewComponent,
  ],
  templateUrl: './striped-hover.component.html',
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class StripedHoverComponent {
  public themeService = inject(ThemeService);

  // Tab state management for STRIPED HOVER example
  stripedHoverTableActiveTab: 'preview' | 'code' = 'preview';

  setStripedHoverActiveTab(tab: 'preview' | 'code'): void {
    this.stripedHoverTableActiveTab = tab;
  }

  // Example data for the table (used by all)
  tableData: TableRow[] = [
    {
      id: 1,
      name: 'Cy Ganderton',
      job: 'Quality Control Specialist',
      color: 'Blue',
    },
    {
      id: 2,
      name: 'Hart Hagerty',
      job: 'Desktop Support Technician',
      color: 'Purple',
    },
    { id: 3, name: 'Brice Swyre', job: 'Tax Accountant', color: 'Red' },
    {
      id: 4,
      name: 'Marjy Ferencz',
      job: 'Office Assistant I',
      color: 'Crimson',
    },
    {
      id: 5,
      name: 'Yancy Tear',
      job: 'Community Outreach Specialist',
      color: 'Indigo',
    },
  ];

  // Getter for STRIPED HOVER table example code
  get stripedHoverTableExampleCode(): string {
    const borderRadiusClass = this.themeService.getBorderRadiusClass();
    const shadowStyle = this.themeService.getShadowClassForElements();
    const primaryBgClass = this.themeService.getPrimaryBgClass();
    const lightBgClass = this.themeService.getLightBgClass();

    const tableHtml = `
<div class="overflow-x-auto border-neo-border border-black ${borderRadiusClass}" style="box-shadow: ${shadowStyle};">
  <table class="min-w-full bg-white">
    <thead class="${primaryBgClass} text-white font-medium">
      <tr>
        <th class="py-3 px-4 text-left">ID</th>
        <th class="py-3 px-4 text-left">Nombre</th>
        <th class="py-3 px-4 text-left">Puesto</th>
        <th class="py-3 px-4 text-left">Color Favorito</th>
      </tr>
    </thead>
    <tbody>
      <!-- Data rows generated by @for loop -->
       @for (row of tableData; track row.id; let isEven = $even) {
        <tr class="border-b border-black hover:bg-gray-100" [ngClass]="isEven ? '${lightBgClass}' : ''">
          <td class="py-3 px-4">{{ row.id }}</td>
          <td class="py-3 px-4">{{ row.name }}</td>
          <td class="py-3 px-4">{{ row.job }}</td>
          <td class="py-3 px-4">{{ row.color }}</td>
        </tr>
      }
    </tbody>
  </table>
</div>`;

    return this.escapeHtml(tableHtml.trim());
  }

  private escapeHtml(unsafe: string): string {
    return unsafe
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#039;');
  }
}
